#!/usr/bin/env stap
# virtblk_io.stp

# Copyright (C) 2012 Red Hat Inc.
# Author Humble Chirammal <humble.devassy@gmail.com> | <hchiramm@redhat.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.



# This script tracks virtio block read/write complete func for an error,
# when the i/o errors are reported inside guest.
# The arg2 in complete function show the error code returned to it.
# There are 2 possibilities for the caller to return EIO to callee and this 
# script checks one condition atm. 
 
# You can execute this script as like any other system tap script.

global pfunc

probe qemu.kvm.bdrv_*, qemu.kvm.virtio_blk_*, qemu.kvm.paio_*

{

pfunc = probefunc()

printf(" \n %s -> %s(%s) \n ", thread_indent(1), probefunc(), $$parms )

}

probe qemu.kvm.virtio_blk_rw_complete

{

        printf ("\n Return Code Revceived :%d", $arg2)

    	if ( arg2 )
    	{

            vDevname = @cast(req, "VirtIOBlockReq")->dev->vdev->name$
            
	    vSerialN = @cast(req, "VirtIOBlockReq")->dev->blk->serial$
            
	    printf ("\n The Virtio Device : %s \n Serial No: %s", vDevname, vSerialN)
            
            printf ("\n The virtio-blk Request::  %p", $req)

            l_blk_size = @cast(req, "VirtIOBlockReq")->dev->conf->logical_block_size$
           
            printf ("\n logical block size: %s", l_blk_size)

            qiov = @cast(req, "VirtIOBlockReq")->qiov->size$
        
	    printf ("\n Qemu IO vector size: %s",qiov)
     }
}
